https://qiita.com/kamihork/items/49e2a363da7d840a4149

ミドルウェア
・コンピュータを制御するオペレーティングシステム（OS）と、特定の処理を行うアプリケーションソフトウェアとの仲立ちをするソフトウェアのこと
・OSの基本的な機能だけでは、アプリケーションソフトが必要とする機能（サーバやデータベースとのやり取りなど）をカバーできない場合があり、必要な機能を集約してパッケージとしてまとめたものがミドルウェア

WEBサーバーソフトウェアとは
・ミドルウェアの一つ
・HTTPリクエストを送った時に、何かしらのレスポンスを返すプログラム

それぞれのメリット/デメリット
・ApacheとNginxの主な違いは駆動方式にある
・Apacheは、マルチプロセスのプロセス駆動アーキテクチャ
　・各リクエストをプロセスに割り当てて処理を行うため、リクエストが大量に来た際に、プロセスが同時に起動するのでオーバーヘッド（負荷処理）が非常に大きくなるというデメリットがある
・Nginxはシングルスレッドモデルのイベント駆動アーキテクチャ
　・Node.jsと同じく、イベントループ方式（シングルスレッドでループ処理をまわし、キューに溜まったイベントを処理していく処理方式）
　・イベントループ方式を採用することで、少量のプロセスだけで大量のリクエストを処理することが可能
　・これにより、C10K問題を解決できている

考察
・Nginxの方が、処理が軽く大量のリクエストを処理するのに向いていおり、柔軟に設定を行うことが可能
・一方、NginxはCPUリソースがたくさん必要な処理には向いていない
　・これは、処理時間が長くなる処理を実行した際、そこでプロセスがブロックされてしまい処理能力が落ちてしまうため
・処理能力に関して、ApacheよりもNginxの方が1.47倍高い結果もでている
※ Apacheもモジュール（event_mpm）の設定を正しくチューニングすることで、Nginxに及ばないまでも、かなりのパフォーマンスを期待することができる様子

結論
【Nginxを選択する場合】
・負荷が高く、スケーラビリティが要求されるような場合
・静的ページに同時多数のアクセスが想定されるような場合

【Apacheを選択する場合】
・負荷が低く、早期または簡易的なセットアップが必要な場合
・同時アクセス数が小さく、単純にリクエスト数が多いような場合